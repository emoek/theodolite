###
# Theodolite resources
###

kafkaClient:
  enabled: false
  nodeSelector: {}

kcat:
  enabled: false
  nodeSelector: {}

####
## configuration of sub charts
###

###
# Grafana
###
grafana:
  enabled: false
 


###
# Strimzi and Kafka
###
strimzi-kafka-operator:
  createGlobalResources: false # Might disable some of Strimzi's features

strimzi:
  enabled: true
  kafka:
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
    replicas: 3
    config:
      "message.max.bytes": "134217728" # 128 MB
      "replica.fetch.max.bytes": "134217728" #128 MB
      "auto.create.topics.enable": false
      "log.retention.ms": "7200000" # 2h
      "metrics.sample.window.ms": "5000" #5s
    jvmOptions:
      "-Xmx": "512M"
      "-Xms": "512M"
    storage:
      type: ephemeral
    nodeSelectorTerms: []
    resources: {}
    
  zookeeper:
    replicas: 3
    zooEntrance:
      enabled: true
      nodeSelector: {}
      zookeeperClient:
        enabled: true
        nodeSelector: {}
    nodeSelectorTerms: []
  
  topicOperator:
    enabled: true
  
  kafkaExporter:
    enabled: true

  schemaRegistry:
    enabled: true
    replicaCount: 1
    ## ref: https://hub.docker.com/r/confluentinc/cp-schema-registry/
    image: confluentinc/cp-schema-registry
    #imageTag: 6.1.0
    imageTag: 5.4.0
    imagePullPolicy: IfNotPresent
    servicePort: 8081
    heapOptions: "-Xms512M -Xmx512M"
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    securityContext:
      runAsUser: 10001
      runAsGroup: 10001
      fsGroup: 10001
      runAsNonRoot: true


###
# Prometheus Monitoring Stack (Prometheus Operator)
###
kube-prometheus-stack:
  global:
    rbac:
      create: false # enable for full-stack monitoring
  
  alertmanager:
    enabled: false
  
  grafana:
    enabled: true
    nodeSelector: {}
    defaultDashboardsEnabled: false
    # Administrator credentials when not using an existing secret (see below)
    adminUser: admin
    adminPassword: admin
    grafana.ini:
      #org_name: Theodolite
      auth.anonymous:
        # enable anonymous access
        enabled: true
        org_role: Admin # Role for unauthenticated users, other valid values are `Viewer`, `Editor` and `Admin`
      users:
        default_theme: light
      #dashboards: # the following doesn't work but is planed
        # Path to the default home dashboard. If this value is empty, then Grafana uses StaticRootPath + "dashboards/home.json"
        #default_home_dashboard_path: "/tmp/dashboards/k8s-dashboard.json"
    ## Sidecars that collect the configmaps with specified label and stores the included files them into the respective folders
    ## Requires at least Grafana 5 to work and can't be used together with parameters dashboardProviders, datasources and dashboards
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: null
        provider:
          # allow updating provisioned dashboards from the UI
          allowUiUpdates: true
      datasources:
        enabled: true
        datasources:
           - apiVersion: 1
           - name: Prometheus
             type: prometheus
             url: http://prometheus-operated:9090/
             isDefault: true
           - name: Loki
             type: loki
             url: http://loki:3100/
             isDefault: false     
    service:
      nodePort: 31199
      type: NodePort
    rbac:
      namespaced: true
  
  kubeApiServer:
    enabled: false
  
  kubelet:
    enabled: false
  
  kubeControllerManager:
    enabled: false
  
  coreDns:
    enabled: false
  
  kubeDns:
    enabled: false
   
  kubeEtcd:
    enabled: false
  
  kubeScheduler:
    enabled: false
  
  kubeProxy:
    enabled: false
  
  kubeStateMetrics:
    enabled: false
  
  nodeExporter:
    enabled: false
  
  prometheusOperator:
    enabled: true
    namespaces:
      releaseNamespace: true
      additional: []
    nodeSelector: {}
    admissionWebhooks:
      enabled: false
    tls:
      enabled: false
    serviceAccount:
      create: true
  
  prometheus:
    enabled: false # Default is using our own Prometheus
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false # Select all service monitors
      podMonitorSelectorNilUsesHelmValues: false # Select all pod monitors
      probeSelectorNilUsesHelmValues: false # Select all pod monitors
      ruleSelectorNilUsesHelmValues: false # Select all pod monitors
      resources:
        requests:
          memory: 400Mi
      scrapeInterval: 15s
      enableAdminAPI: true


###
# Theodolite's custom Prometheus
###
prometheus: 
  enabled: true
  podMetadata: {}
  nodeSelector: {}
  nodePort:
    enabled: false
    nodePort: 30900

  scrapeInterval: 15s
  enableAdminAPI: true
  
  serviceAccount:
    enabled: true
  role:
    enabled: true
    clusterRole: false
  roleBinding:
    enabled: true
    clusterRoleBinding: false

###
# Theodolite Operator
###
operator:
  enabled: true
  
  image: emreoe/theomod
  imageTag: 1.9
  imagePullPolicy: Always

  nodeSelector: {}

  podAnnotations: {}

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1024Mi"
      cpu: "500m"

  sloChecker:
    generic:
      enabled: true
      image: ghcr.io/cau-se/theodolite-slo-checker-generic
      imageTag: latest
      imagePullPolicy: Always
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "128Mi"
          cpu: "100m"
    efficiency:
      enabled: true
      image: emreoe/theodolite-slo-checker-efficiency
      imageTag: 1.5
      imagePullPolicy: Always
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "128Mi"
          cpu: "100m"
    lagTrend:
      enabled: true
      image: ghcr.io/cau-se/theodolite-slo-checker-lag-trend
      imageTag: latest
      imagePullPolicy: Always
      resources:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "128Mi"
          cpu: "100m"

  resultsVolume:
    persistent:
      enabled: false
      # existingClaim:
      # storageClassName:
      accessModes:
        - ReadWriteOnce
      size: 1Gi
    accessSidecar:
      enabled: true
      image: busybox
      imageTag: stable
      imagePullPolicy: IfNotPresent
      #resources: {}

  theodoliteBenchmarks:
    resourceConfigMaps:
      uc1LoadGenerator: true
      uc1Kstreams: true
      uc1Flink: true
      uc1Hazelcast: true
      uc1BeamFlink: true
      uc1BeamSamza: true
      uc2LoadGenerator: true
      uc2Kstreams: true
      uc2Flink: true
      uc2Hazelcast: true
      uc2BeamFlink: true
      uc2BeamSamza: true
      uc3LoadGenerator: true
      uc3Kstreams: true
      uc3Flink: true
      uc3Hazelcast: true
      uc3BeamFlink: true
      uc3BeamSamza: true
      uc4LoadGenerator: true
      uc4Kstreams: true
      uc4Flink: true
      uc4Hazelcast: true
      uc4BeamFlink: true
      uc4BeamSamza: true
    benchmarks:
      uc1Kstreams: true
      uc1Flink: true
      uc1Hazelcast: true
      uc1BeamFlink: true
      uc1BeamSamza: true
      uc2Kstreams: true
      uc2Flink: true
      uc2Hazelcast: true
      uc2BeamFlink: true
      uc2BeamSamza: true
      uc3Kstreams: true
      uc3Flink: true
      uc3Hazelcast: true
      uc3BeamFlink: true
      uc3BeamSamza: true
      uc4Kstreams: true
      uc4Flink: true
      uc4Hazelcast: true
      uc4BeamFlink: true
      uc4BeamSamza: true




loki-stack:
  enabled: true
  promtail:
    enabled: false
  grafana:
    enabled: false
  mode: standalone
  nodeSelector: {}
  schema_config:
    configs: 
      limits_config:
        retention_period: 72h
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_cache_freshness_per_query: 10m
        split_queries_by_interval: 15m
        per_stream_rate_limit: 512M
        per_stream_rate_limit_burst: 1024M
        cardinality_limit: 200000
      ingestion_rate_mb: 10000
      ingestion_burst_size_mb: 1000
      max_entries_limit_per_query: 1000000
      max_label_value_length: 20480
      max_label_name_length: 10240
      max_label_names_per_series: 300


kepler:
  enabled: false
  image:
    repository: "quay.io/sustainable_computing_io/kepler"
    pullPolicy: Always
  securityContext:
    privileged: true
  nodeSelector:
    kubernetes.io/os: linux
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
  extraEnvVars:
    KEPLER_LOG_LEVEL: "1"
    ENABLE_GPU: "true"
    ENABLE_EBPF_CGROUPID: "true"
    EXPOSE_IRQ_COUNTER_METRICS: "true"
    EXPOSE_KUBELET_METRICS: "true"
    ENABLE_PROCESS_METRICS: "true"
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  serviceMonitor:
    enabled: false
    namespace: ""
    interval: 30s
    scrapeTimeout: 5s
    labels: {}


serviceAccount:
  create: true

rbac:
  create: true
  additionalRules: []

randomScheduler:
  enabled: false
  image: ghcr.io/cau-se/theodolite-random-scheduler
  imageTag: latest
  imagePullPolicy: Always
  rbac:
    create: true
  serviceAccount:
    create: true
  nodeSelector: {}
